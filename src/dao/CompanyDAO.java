package dao;

import java.sql.ResultSet;
import java.sql.SQLException;

import model.Company;
import model.Contact;
import model.Representative;
import util.MySqlAdapter;



/**
 * @author	Oupouwaout
 */
public abstract class CompanyDAO {
	

	// Set Company's attributes
	/**
	 * Gets the company's details from the database and 
	 * sets its attributes.
	 * 
	 * @param company the company which to set attributes
	 * @throws SQLException
	 */
	public static void getCompanyDAO(Company company) throws SQLException {

		// Get the company's details
		String selectSt = 
				"SELECT * "
				+ "FROM Company "
				+ "WHERE idCompany = " + company.getIdCompany() + ";";
		ResultSet rs = MySqlAdapter.dbExecuteQuery(selectSt);

		// Set the company's details
        while (rs.next()) {
        	company.setCompanyName(rs.getString("companyName"));
        	company.setSiret(rs.getLong("siret"));
        	company.setAddress(AddressDAO.getAddressDAO(rs.getInt("idAddress")));
        	
        	// Sets  the contact
        	int idContact = rs.getInt("idContact");
        	for (Contact contact : Contact.getContactList()) {
        		if (contact.getNumPerson().equals(idContact)) {
        			company.setContact(contact);
        			break;
        		}
        	}
        	
        	// Sets the representative
        	int idRepresentative = rs.getInt("idRepresentative");
        	for (Representative representative : Representative.getRepresentativeData()) {
        		if (representative.getNumPerson().equals(idRepresentative)) {
        			company.setRepresentative(representative);
        			break;
        		}
        	}
        }
	}
	
	
	// Insert Company
		/**
		 * Insert a set into the database for the parametered company 
		 * and returns the generated key.
		 * <p>
		 * This method inserts into the database a set recording the 
		 * company's attributes, gives it the parametered idAddress 
		 * and returns the key automatically generated by the database 
		 * for this entry, if any, or -1.
		 * 
		 * @param company the company to insert
		 * @param idAddress the company's address' id
		 * @return the generated idCompany
		 * @throws SQLException
		 */
	public static int insertCompanyDAO(Company company, int idAddress) throws SQLException {
		
		String insertSt = 
				"INSERT INTO Company ("
					+ "companyName, siret, "
					+ "idAddress, idContact, idRepresentative) "
				+ "VALUES ("
					+ "'" + company.getCompanyName() + "', " 
					+ "" + company.getSiret() + ", " 
					+ "" + idAddress + ", "
					+ "" + company.getContact().getNumPerson() + ", "
					+ "" + company.getRepresentative().getNumPerson() + ") "
				+ "ON DUPLICATE KEY UPDATE siret = siret";
		
		return MySqlAdapter.dbExecuteUpdate(insertSt);
	}
	

	// Get Company auto_increment
	/**
	 * Requests the actual auto_increment for the table <code>Company</code>.
	 * 
	 * @return the Company auto_increment
	 * @throws SQLException
	 */
	public static int getAiCompanyDAO() throws SQLException {

		int aiCompanyDAO = 1;
		String selectSt = 
				"SELECT AUTO_INCREMENT " 
				+ "FROM  INFORMATION_SCHEMA.TABLES " 
				+ "WHERE TABLE_SCHEMA = 'toutbois' " 
				+ "AND TABLE_NAME = 'Company'; ";
		ResultSet rs = MySqlAdapter.dbExecuteQuery(selectSt);
		
		while (rs.next()) {
			aiCompanyDAO = rs.getInt("AUTO_INCREMENT");
		}
		
		return aiCompanyDAO;
	}
	
	
	// Edit Company
	/**
	 * Update the set in the database for the parametered company.
	 * <p>
	 * This method finds in the database the set recording the 
	 * company's attributes using its idCompany, and updates it 
	 * to match the company object's attributes.
	 * 
	 * @param company the company to edit
	 * @throws SQLException
	 */
	public static void editCompanyDAO(Company company) throws SQLException {

		AddressDAO.editAddressDAO(company);
		ContactDAO.editContactDAO(company);
		
		String updateSt = 
				"UPDATE Company "
				+ "SET "
					+ "companyName = '" + company.getCompanyName() + "', "
					+ "siret = '" + company.getSiret() + "', "
					+ "idRepresentative = '" + company.getRepresentative().getNumPerson() + "' "
				+ "WHERE idCompany = " + company.getIdCompany() + "; ";
		
		MySqlAdapter.dbExecuteUpdate(updateSt);
	}
	
	
	// Delete Company
	/**
	 * Deletes the set in the database for the parametered company.
	 * 
	 * @param company 
	 * @throws SQLException
	 */
	public static void deleteCompany(Company company) throws SQLException {
		
		AddressDAO.deleteAddress(company);
	}
	
	

} // public class CompanyDAO
