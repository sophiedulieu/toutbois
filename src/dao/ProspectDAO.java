package dao;

import java.sql.ResultSet;
import java.sql.SQLException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

import model.Prospect;
import util.MySqlAdapter;



/**
 * @author	Oupouwaout
 */
public abstract class ProspectDAO extends CompanyDAO {
	
	
	// List
	public static ObservableList<Prospect> prospectListDAO = 
			FXCollections.observableArrayList();
	
	
	// Get list
	public static ObservableList<Prospect> getProspectListDAO() {
		return prospectListDAO;
	}
	
	
	// Build list
	/**
	 * Returns a list of prospects with their attributes set.
	 * <p>
	 * This method requests a list of the prospects from the 
	 * <code>MySQL</code> database. The <code>resultSet</code> is 
	 * used to instantiate each prospect from the list, set 
	 * their attributes, and add them to <code>prospectListDAO</code>. 
	 * Then, this method calls <code>getCompanyDAO()</code> to request 
	 * each company's details and to set them into the prospects.
	 * Finally, the built list is return.
	 * 
	 * @return the list of prospects
	 * @throws SQLException
	 */
	public static ObservableList<Prospect> buildProspectListDAO() throws SQLException {
		
		prospectListDAO.clear();

		// Get the list of prospects with their details
		String selectSt = "SELECT * FROM Prospect;";
		ResultSet rs = MySqlAdapter.dbExecuteQuery(selectSt);

		// Set each prospect's attributes and add them to the list
        while (rs.next()) {
        	Prospect prospect = new Prospect();
        	prospect.setIdCompany(rs.getInt("idCompany"));
        	prospect.setLastVisit(rs.getDate("lastVisit"));
        	prospectListDAO.add(prospect);
        }

        // Get the company details for each prospect
        for (Prospect prospect : prospectListDAO) {
        	getCompanyDAO(prospect);
        }
        
		return prospectListDAO;
	}
	
	
	// Insert Prospect
	/**
	 * Insert a set into the database for the parametered prospect 
	 * and returns the generated key.
	 * <p>
	 * This method inserts into the database a set recording the 
	 * prospect's attributes, and returns the key automatically 
	 * generated by the database for this entry, if any, or -1.
	 * 
	 * @param	prospect	the prospect to insert
	 * @return	the generated idProspect
	 * @throws	SQLException
	 */
	public static int insertProspectDAO(Prospect prospect) throws SQLException {
		
		String insertSt = 
				"INSERT INTO Prospect (idCompany, lastVisit) "
				+ "VALUES ("
						+ "" + prospect.getIdCompany() + ", " 
						+ "'" + prospect.getLastVisit() + "'); ";
		
		return MySqlAdapter.dbExecuteUpdate(insertSt);
	}
	
	
	// Edit Prospect
	/**
	 * Update the set in the database for the parametered prospect.
	 * <p>
	 * This method finds in the database the set recording the 
	 * prospect's attributes using its idCompany, and updates it 
	 * to match the prospect object's attributes.
	 * 
	 * @param prospect the prospect to edit
	 * @throws SQLException
	 */
	public static void editProspectDAO(Prospect prospect) throws SQLException {

		CompanyDAO.editCompanyDAO(prospect);
		
		String updateSt = 
				"UPDATE Prospect "
				+ "SET "
					+ "lastVisit = '" + prospect.getLastVisit() + "' "
				+ "WHERE idCompany = " + prospect.getIdCompany() + "; ";
		
		MySqlAdapter.dbExecuteUpdate(updateSt);
	}
	
	
	// Change Client to Prospect
	/**
	 * Inserts a set into the database for the parametered prospect, 
	 * and deletes the set for the company from the <code>Client</code> 
	 * table.
	 * <p>
	 * This method finds in the database the set recording the 
	 * company's client's attributes using its idCompany, and deletes it.
	 * Then, it inserts a set recording the same company as a prospect.
	 * 
	 * @param prospect the prospect to insert
	 * @throws SQLException
	 */
	public static void clientToProspect(Prospect prospect) throws SQLException {
		
		String deleteSt = 
				"DELETE FROM Client "
				+ "WHERE idCompany = " + prospect.getIdCompany() + ";";
		
		MySqlAdapter.dbExecuteUpdate(deleteSt);
		
		String insertSt = 
				"INSERT INTO Prospect (idCompany, lastVisit) "
				+ "VALUES ("
						+ "" + prospect.getIdCompany() + ", "
						+ "'" + prospect.getLastVisit() + "'); ";
		
		MySqlAdapter.dbExecuteUpdate(insertSt);
	}
	
	
	// Delete Prospect
	/**
	 * Deletes the set in the database for the parametered prospect.
	 * 
	 * @param prospect 
	 * @throws SQLException
	 */
	public static void deleteProspect(Prospect prospect) throws SQLException {
		
		CompanyDAO.deleteCompany(prospect);
	}
	
	
	
} // public abstract class ProspectDAO
